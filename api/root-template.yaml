AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "TTAppTable Application"


Parameters:
  StageName: 
    Default: local
    Type: String
    AllowedValues:
      - dev
      - prod
      - local

  SSLCertificateArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/ttApp/Application/sslCertificateArn"

  GoogleClientId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/ttApp/Application/googleClientId"

  GoogleSecretKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/ttApp/Application/googleSecretKey"

  IsEnableCustomDomain:
    Type: String
    Default: "false"
    AllowedValues:
         - "true"
         - "false"

Mappings:
  DomainName:
    dev:
      URL: https://khel.ns-info.xyz/index.html
      # URL: https://dev-khel.inapp.com/index.html
    prod:
      URL: https://khel.inapp.com/index.html
    local:
      URL: http://localhost:5173/

  StackNamePrefix:
    dev:
      Name: ttapp-dev-stack
    prod:
      Name: ttapp-stack
    local:
      Name: ttapp-local-stack


Resources:
  LambdaLayerStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./lambdaLayerStack/template.yaml
      Parameters:
        StageName: !Ref StageName
        StackNamePrefix: !FindInMap [StackNamePrefix, !Ref StageName, Name]
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  
  DynamoDbTableStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./dynamodbStack/template.yaml
      Parameters:
        StageName: !Ref StageName
        StackNamePrefix: !FindInMap [StackNamePrefix, !Ref StageName, Name]
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  
  AccessIdentiyStack:
    Type: AWS::Serverless::Application
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Location: ./infrastructure/access-identity-template.yaml
      Parameters:
        StackNamePrefix: !FindInMap [StackNamePrefix, !Ref StageName, Name]

  FrontendBucketStack:
    Type: AWS::Serverless::Application
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Location: ./infrastructure/frontend-bucket-template.yaml
      Parameters:
        StageName: !Ref StageName
        StackNamePrefix: !FindInMap [StackNamePrefix, !Ref StageName, Name]
        IsEnableCustomDomain: !Ref IsEnableCustomDomain
        DomainName: !Sub
          - https://${domain}
          - domain: !FindInMap [DomainName, !Ref StageName, URL]
        S3CanonicalUserId: !GetAtt AccessIdentiyStack.Outputs.S3CanonicalUserId
  
  CloudFrontStack:
    Type: AWS::Serverless::Application
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Location: ./infrastructure/cloudfront-template.yaml
      Parameters:
        FrontendBucketDomainName: !GetAtt FrontendBucketStack.Outputs.FrontendBucketDomainName
        TTAppOriginAccessIdentity: !GetAtt AccessIdentiyStack.Outputs.TTAppOriginAccessIdentity
        IsEnabledCustomeDomain: !Ref IsEnableCustomDomain
        Alias: !FindInMap [DomainName, !Ref StageName, URL ]
        SSLCertificateArn: !Ref SSLCertificateArn

  CognitoStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./cognitoStack/template.yaml
      Parameters:
        StageName: !Ref StageName
        URLs: !FindInMap [DomainName, !Ref StageName, URL]
        GoogleClientId: !Ref GoogleClientId
        GoogleSecretKey: !Ref GoogleSecretKey
        TTAppLayer: !GetAtt LambdaLayerStack.Outputs.TTAppLayer
        TableName: !GetAtt DynamoDbTableStack.Outputs.TTAppTableName
        TTAppTableArn: !GetAtt DynamoDbTableStack.Outputs.TTAppTableArn
        StackNamePrefix: !FindInMap [StackNamePrefix, !Ref StageName, Name]
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  
  FunctionStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./functionStack/template.yaml
      Parameters:
        StageName: !Ref StageName
        UserPoolArn: !GetAtt CognitoStack.Outputs.UserPoolArn
        TTAppLayer: !GetAtt LambdaLayerStack.Outputs.TTAppLayer
        TableName: !GetAtt DynamoDbTableStack.Outputs.TTAppTableName
        TTAppTableArn: !GetAtt DynamoDbTableStack.Outputs.TTAppTableArn
        TTAppTableIndex: !GetAtt DynamoDbTableStack.Outputs.TTAppTableIndexName
        StackNamePrefix: !FindInMap [StackNamePrefix, !Ref StageName, Name]
        WebSocketUrl: !GetAtt SocketStack.Outputs.TTAppWebSocketGatewayEndpoint
        WebSocketPostUrl: !GetAtt SocketStack.Outputs.TTAppWebSocketGatewayPOSTEndpoint
        TTAppDynamoStreamARN: !GetAtt DynamoDbTableStack.Outputs.TTAppDynamoStreamARN
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  SocketStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./socketStack/template.yaml
      Parameters:
        StageName: !Ref StageName
        UserPoolId: !GetAtt CognitoStack.Outputs.UserPoolId
        UserPoolClientId: !GetAtt CognitoStack.Outputs.UserPoolClientId
        TTAppLayer: !GetAtt LambdaLayerStack.Outputs.TTAppLayer
        TableName: !GetAtt DynamoDbTableStack.Outputs.TTAppTableName
        TTAppTableArn: !GetAtt DynamoDbTableStack.Outputs.TTAppTableArn
        TTAppTableIndex: !GetAtt DynamoDbTableStack.Outputs.TTAppTableIndexName
        StackNamePrefix: !FindInMap [StackNamePrefix, !Ref StageName, Name]
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

Outputs:
  TTAppApiURL:
    Description: Api Gateway base url
    Value: !GetAtt FunctionStack.Outputs.TTAppApiURL
  
  UserPoolId:
    Description: User pool ID
    Value: !GetAtt CognitoStack.Outputs.UserPoolId
  
  UserPoolClientId:
    Description: User pool Client ID
    Value: !GetAtt CognitoStack.Outputs.UserPoolClientId

