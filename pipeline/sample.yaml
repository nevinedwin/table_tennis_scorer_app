AWSTemplateFormatVersion: 2010-09-09

Parameters:
  CodePipelineBucketName:
    Type: String
    Default: khelapp-pipeline
  ProjectName:
    Type: String
    Description: Name for the Stack or project
  GitHubOwner:
    Type: String
    Default: "/khelApp/pipeline/GitHubOwner"
  GitHubRepo:
    Type: String
    Default: "/khelApp/pipeline/GitHubRepo"
  GitHubOAuthToken:
    Type: String
    Default: "/khelApp/pipeline/GitHubOAuthToken"
  Branch:
    Type: String
    Default: 'main'
    AllowedValues: ['main', 'dev', 'debug', 'local']
  FrontendBucketName:
    Type: String
    Description: Frontend Bucket Name

Resources:

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
      - PolicyName: CodeBuildAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
                - s3:GetObjectVersion
              Resource: 
                - !Sub arn:aws:s3:::${CodePipelineBucketName}/*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
    
  FrontendBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ProjectName}-FrontendBuild
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: |-
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 20
            pre-build:
              commands:
                - cd client
                - npm install
            build:
              commands:
                - npm run build

          artifacts:
            files:
              - '**/*'
            base-directory: client/dist
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref FrontendLogGroup
          StreamName: !Ref CodeBuildFrontendLogStream
      TimeoutInMinutes: 10

  FrontendLogGroup:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${ProjectName}-build-frontend
      RetentionInDays: 5

  CodeBuildFrontendLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref FrontendLogGroup
      LogStreamName: !Sub ${ProjectName}-codebuild-frontend
  
  BackendBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ProjectName}-BackendBuild
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: |-
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 20
                python: 3.8
              commands:
                - pip install aws-sam-cli
            pre-build:
              commands:
                - cd api
                - npm run buildLayer
            build:
              commands:
                - npm run package

          artifacts:
            files:
              - packaged.yaml
            base-directory: api
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref BackendLogGroup
          StreamName: !Ref CodeBuildBackendLogStream
      TimeoutInMinutes: 10

  BackendLogGroup:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${ProjectName}-build-backend
      RetentionInDays: 5

  CodeBuildBackendLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref BackendLogGroup
      LogStreamName: !Sub ${ProjectName}-codebuild-backend

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      MaxSessionDuration: 3600
      Policies:
        - PolicyName: CodePipelineServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - cloudformation:*
                  - iam:PassRole
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: '*'
  
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3 
        Location: !Ref CodePipelineBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Owner: ThirdParty
                Category: Source
                Version: 2
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref Branch
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: BuildBackend
          Actions:
            - Name: BuildBackend
              ActionTypeId:
                Owner: AWS
                Category: Build 
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BackendBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BackendBuildOutput
              RunOrder: 1
        - Name: BuildFrontend
          Actions:
            - Name: BuildFrontend 
              ActionTypeId:
                  Owner: AWS
                  Category: Build
                  Version: 1
                  Provider: CodeBuild
              Configuration:
                ProjectName: !Ref FrontendBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: FrontendBuildOutput
              RunOrder: 1
        - Name: DeployBackend
          Actions:
            - Name: DeployCloudFormation
              ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref ProjectName
                TemplatePath: BackendBuildOutput::packaged.yaml
                RoleArn: !GetAtt CloudFormationRole.Arn
              InputArtifacts:
                - Name: BackendBuildOutput
              RunOrder: 1
        - Name: DeployFrontend
          Actions:
            - Name: DeployFrontend
              ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !Ref FrontendBucketName
                Extract: true
              InputArtifacts:
                - Name: FrontendBuildOutput
              RunOrder: 1
  
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'