AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "KhelAppTable Application Socket"


Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 900
    MemorySize: 1024
    Layers:
      - !Ref KhelAppLayer
    Environment:
      Variables:
        TABLE_NAME: !Ref TableName
        INDEX_NAME: !Ref KhelAppTableIndex
        USERPOOL_ID: !Ref UserPoolId
        USERPOOL_CLIENT_ID: !Ref UserPoolClientId

Parameters:
  StageName:
    Type: String
  KhelAppLayer:
    Type: String
  TableName:
    Type: String
  KhelAppTableArn:
    Type: String
  UserPoolId:
    Type: String
  UserPoolClientId:
    Type: String
  StackNamePrefix:
    Type: String
  KhelAppTableIndex:
    Type: String

Resources:

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.main
      CodeUri: authorizer
      FunctionName: !Sub "${StackNamePrefix}-AuthorizerFunction-${StageName}"
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - logs:DescribeLogStreams
              Resource: "*"

  AuthorizerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${AuthorizerFunction}
      RetentionInDays: 90

  SocketFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.main
      CodeUri: socket
      FunctionName: !Sub ${StackNamePrefix}-SocketFunction-${StageName}
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - execute-api:ManageConnections
                - execute-api:Invoke
              Resource:
                - !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${KhelAppWebSocketGateway}/*
            - Effect: Allow
              Action:
                - dynamodb:Query
                - dynamodb:UpdateItem
                - dynamodb:PutItem
              Resource:
                - !Ref KhelAppTableArn
                - !Sub ${KhelAppTableArn}/index/*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - logs:DescribeLogStreams
              Resource: "*"

  SocketFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${SocketFunction}
      RetentionInDays: 90
  
  KhelAppWebSocketGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub ${StackNamePrefix}-KhelAppWebSocket-${StageName}
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: request.body.action

  LambdaAuthorizer:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      Name: LambdaAuth
      ApiId: !Ref KhelAppWebSocketGateway
      AuthorizerType: REQUEST
      AuthorizerUri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthorizerFunction.Arn}/invocations
      IdentitySource:
        - route.request.querystring.token
  
  ApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref KhelAppWebSocketGateway
      Description: Socket Lambda Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SocketFunction.Arn}/invocations
      IntegrationMethod: POST
  
  KhelAppWebSocketGatewayCloudWatchRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs'
  
  KhelAppWebSocketGatewayAccount:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn: !GetAtt KhelAppWebSocketGatewayCloudWatchRole.Arn
  
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref KhelAppWebSocketGateway
      RouteKey: "$connect"
      AuthorizationType: CUSTOM
      OperationName: ConnectRoute
      AuthorizerId: !Ref LambdaAuthorizer
      Target: !Sub integrations/${ApiIntegration}
  
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref KhelAppWebSocketGateway
      RouteKey: "$disconnect"
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Sub integrations/${ApiIntegration}
  
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref KhelAppWebSocketGateway
      RouteKey: "$default"
      AuthorizationType: NONE
      OperationName: DefaultRoute
      Target: !Sub integrations/${ApiIntegration}
  
  DefaultRouteResponse:
    Type: AWS::ApiGatewayV2::RouteResponse
    Properties:
      RouteId: !Ref DefaultRoute
      ApiId: !Ref KhelAppWebSocketGateway
      RouteResponseKey: $default
  
  DeploymentGateway:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - DisconnectRoute
      - DefaultRoute
    Properties:
      ApiId: !Ref KhelAppWebSocketGateway
  
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    DependsOn:
      - KhelAppWebSocketGatewayAccount
    Properties:
      StageName: !Ref StageName
      Description: !Ref StageName
      DeploymentId: !Ref DeploymentGateway
      DefaultRouteSettings:
        DetailedMetricsEnabled: false
      AccessLogSettings:
        DestinationArn: !GetAtt KhelAppWebSocketGatewayLogGroup.Arn
        Format: $context.identity.sourceIp - - [$context.requestTime] "$context.httpMethod $context.routeKey $context.protocol" $context.status $context.responseLength $context.requestId $context.integrationErrorMessage
      ApiId: !Ref KhelAppWebSocketGateway
  
  KhelAppWebSocketGatewayLogGroup:
    DependsOn: KhelAppWebSocketGateway
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/apigateway/${StackNamePrefix}-KhelAppWebSocket-${StageName}
      RetentionInDays: 90
  

  AuthorizerFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - KhelAppWebSocketGateway
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AuthorizerFunction
      Principal: apigateway.amazonaws.com
  

  HandlerFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - KhelAppWebSocketGateway
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SocketFunction
      Principal: apigateway.amazonaws.com


Outputs:
  KhelAppWebSocketGateway:
    Description: "Websocket gateway api-id"
    Value: !Ref KhelAppWebSocketGateway
  KhelAppWebSocketGatewayEndpoint:
    Description: "The WSS Protocol URI to connect to"
    Value: !Sub ${KhelAppWebSocketGateway.ApiEndpoint}/${StageName}
  KhelAppWebSocketGatewayPOSTEndpoint:
    Description: "Post endpoint for Sockets"
    Value: !Sub https://${KhelAppWebSocketGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}